{"version":3,"sources":["Components/Cutout/Cutout.jsx","Components/App/App.js","index.js"],"names":["Cutout","imgUrls","collage","i","length","cutout","className","src","push","App","useState","token","setToken","setImgUrls","useEffect","window","location","hash","accessToken","substring","split","fetch","method","headers","Authorization","then","res","json","data","myFavArtistsImgUrls","items","forEach","artist","images","url","catch","err","console","error","accessSpotifyApi","href","join","onClick","shuffledImgUrls","j","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"mQAgBeA,G,YAbA,SAAC,GAEd,IAF+B,IAAfC,EAAc,EAAdA,QACZC,EAAU,GACLC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAIE,EACF,yBAAKC,UAAU,oBACb,yBAAKC,IAAKN,EAAQE,MAGtBD,EAAQM,KAAKH,GAGf,OAAOH,ICiFMO,EA3FH,WACV,IADgB,EAMUC,mBAAS,MANnB,mBAMTC,EANS,KAMFC,EANE,OAOcF,mBAAS,IAPvB,mBAOTT,EAPS,KAOAY,EAPA,KA0DhB,OAjDAC,qBAAU,WACR,GAAIC,OAAOC,SAASC,KAAM,CAExB,IACIC,EADOH,OAAOC,SAASC,KAAKE,UAAU,GAAGC,MAAM,KAC5B,GAAGA,MAAM,KAAK,GACjCF,IAEFN,EAASM,GAOf,SAA0BP,GACxBU,MACE,0EACA,CACEC,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYb,KAI9Bc,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAsB,GAC1BD,EAAKE,MAAMC,SAAQ,SAACC,GAClBH,EAAoBrB,KAAKwB,EAAOC,OAAO,GAAGC,QAG5CrB,EAAWgB,MAEZM,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,MAzB5BG,CAAiBrB,IAEnBH,OAAOC,SAASC,KAAO,MAExB,IAsCD,yBAAKX,UAAU,QACXK,GACA,0BAAML,UAAU,mBACd,iGAGA,uBACEA,UAAU,cACVkC,KAAI,UAlEF,yCAkEE,sBAjEG,mCAiEH,yBAhEM,iCAgEN,kBA/DC,CAAC,iBA+DyEC,KAC7E,OADE,0CAFN,uBAUH9B,GACC,0BAAML,UAAU,wBACd,gCACE,4BAAQA,UAAU,cAAcoC,QAjC1C,WAEE,IADA,IAAIC,EAAe,YAAO1C,GACjBE,EAAIwC,EAAgBvC,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACnD,IAAMyC,EAAIC,KAAKC,MAAMD,KAAKE,UAAY5C,EAAI,IADS,EAER,CACzCwC,EAAgBC,GAChBD,EAAgBxC,IAFjBwC,EAAgBxC,GAFkC,KAE9BwC,EAAgBC,GAFc,KAQrD/B,EAAW8B,KAuBH,YAIF,yBAAKrC,UAAU,qBACb,kBAAC,EAAD,CAAQL,QAASA,QClF7B+C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ecba9f26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Cutout.css\";\r\n\r\nconst Cutout = ({ imgUrls }) => {\r\n  let collage = [];\r\n  for (let i = 0; i < imgUrls.length; i++) {\r\n    let cutout = (\r\n      <div className=\"artist-container\">\r\n        <img src={imgUrls[i]} />\r\n      </div>\r\n    );\r\n    collage.push(cutout);\r\n  }\r\n\r\n  return collage;\r\n};\r\nexport default Cutout;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Cutout from \"../Cutout/Cutout\";\n\nconst App = () => {\n  const api = \"https://accounts.spotify.com/authorize\";\n  const ClientID = \"87c75803145f4e2899fac3058de2699c\";\n  const redirectUri = \"http://localhost:3000/redirect\";\n  const scopes = [\"user-top-read\"];\n\n  const [token, setToken] = useState(null);\n  const [imgUrls, setImgUrls] = useState([]);\n\n  useEffect(() => {\n    if (window.location.hash) {\n      // After spotify authorization get hash from response\n      let hash = window.location.hash.substring(1).split(\"&\");\n      let accessToken = hash[0].split(\"=\")[1];\n      if (accessToken) {\n        // Set the token\n        setToken(accessToken);\n        accessSpotifyApi(accessToken);\n      }\n      window.location.hash = \"\";\n    }\n  }, []);\n\n  function accessSpotifyApi(token) {\n    fetch(\n      \"https://api.spotify.com/v1/me/top/artists?limit=50&time_range=long_term\",\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        let myFavArtistsImgUrls = [];\n        data.items.forEach((artist) => {\n          myFavArtistsImgUrls.push(artist.images[0].url);\n        });\n\n        setImgUrls(myFavArtistsImgUrls);\n      })\n      .catch((err) => console.error(err));\n  }\n\n  function shuffleImgUrls() {\n    let shuffledImgUrls = [...imgUrls];\n    for (let i = shuffledImgUrls.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledImgUrls[i], shuffledImgUrls[j]] = [\n        shuffledImgUrls[j],\n        shuffledImgUrls[i],\n      ];\n    }\n\n    setImgUrls(shuffledImgUrls);\n  }\n\n  return (\n    <div className=\"app\">\n      {!token && (\n        <main className=\"login-container\">\n          <p>\n            Make a barcode collage of your favourite artists, because why not.\n          </p>\n          <a\n            className=\"spotify-btn\"\n            href={`${api}?client_id=${ClientID}&redirect_uri=${redirectUri}&scope=${scopes.join(\n              \"%20\"\n            )}&response_type=token&show_dialog=true`}\n          >\n            Login With Spotify\n          </a>\n        </main>\n      )}\n      {token && (\n        <main className=\"authorized-container\">\n          <header>\n            <button className=\"spotify-btn\" onClick={shuffleImgUrls}>\n              Reorder\n            </button>\n          </header>\n          <div className=\"collage-container\">\n            <Cutout imgUrls={imgUrls} />\n          </div>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}